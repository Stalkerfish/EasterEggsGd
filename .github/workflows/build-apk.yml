name: Build APK

on:
  push:
    branches:
      - master

permissions:
  contents: write  # Allow the workflow to write to the repository
  packages: write  # Allow the workflow to publish and delete packages

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4.4.0
        with:
          java-version: '17'
          distribution: 'temurin'  # or 'adopt'

      - name: Cache Gradle packages
        uses: actions/cache@v4.1.2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build APK (Debug)
        run: |
          cd src/main/kotlin/dexApp
          ./gradlew assemble --no-daemon

      - name: Read version from file
        id: read_version
        run: |
          cd src/main/kotlin/dexApp/app
          VERSION=$(cat version.txt)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Create a new tag
        id: create_tag
        run: |
          VERSION=${{ env.VERSION }}
          git tag "v$VERSION"
          git push origin "v$VERSION"
          echo "TAG=v$VERSION" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.TAG }}
          release_name: "APK Build v${{ env.TAG }}"
          body: "This is an automatically generated release containing the debug APK for version ${{ env.TAG }}."
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Use the token here

      - name: Upload APK to GitHub release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: src/main/kotlin/dexApp/app/build/outputs/apk/debug/dexApp-DEBUG-${{ env.VERSION }}.apk
          asset_name: dexApp-DEBUG-${{ env.VERSION }}.apk
          asset_content_type: application/vnd.android.package-archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Ensure the token is passed here
