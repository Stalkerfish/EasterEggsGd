name: Build APK

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@v4.4.0
      with:
        java-version: '17'
        distribution: 'temurin'  # or 'adopt'

    - name: Cache Gradle packages
      uses: actions/cache@v4.1.2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Build APK (Debug)
      run: |
        cd src/main/kotlin/dexApp
        ./gradlew assemble --no-daemon

    - name: Read version from file
      id: read_version
      run: |
        VERSION=$(cat version.txt)
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Create a new tag
      id: create_tag
      run: |
        VERSION=${{ env.VERSION }}
        git tag "v$VERSION"
        git push origin "v$VERSION"
        echo "TAG=v$VERSION" >> $GITHUB_ENV

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ env.TAG }}
        release_name: "APK Build v${{ env.TAG }}"
        body: "This is an automatically generated release containing the debug APK for version ${{ env.TAG }}."
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload APK to GitHub release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: app/build/outputs/apk/debug/dexApp-DEBUG-${{ env.VERSION }}.apk
        asset_name: dexApp-DEBUG-${{ env.VERSION }}.apk
        asset_content_type: application/vnd.android.package-archive
